@model SPFS.Models.UserViewModel

@{
    ViewBag.Title = "Edit";
    var text = Model.SPFS_Active ? "Active" : "In Active";
}
@using (Html.BeginForm())
{ @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.UserID)
    <h2>Edit</h2>
    <hr />
    <div class="form-horizontal col-md-12" style="margin-left:30px; margin-top: 10px">
        <div class="row col-md-12" style="margin-top: 10px">
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.UserName, new { @class = "control-label" })<span class="requiredSymbol">*</span>
                        @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", maxlength = "30", placeholder = "User Name", @readonly = "readonly" })
                        @Html.ValidationMessageFor(model => model.UserName)
                    </div>
                </div>
                <div class="col-md-4 col-md-offset-1">
                    <div class="form-group">
                        @Html.LabelFor(model => model.FirstName, new { @class = "control-label" })<span class="requiredSymbol">*</span>
                        @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control", maxlength = "70", placeholder = "First Name" })
                        @Html.ValidationMessageFor(model => model.FirstName)
                    </div>
                </div>

            </div>
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.MiddleName, new { @class = "control-label" })
                        @Html.TextBoxFor(model => model.MiddleName, new { @class = "form-control", maxlength = "50", placeholder = "Middle Name" })
                        @Html.ValidationMessageFor(model => model.MiddleName)
                    </div>
                </div>
                <div class="col-md-4 col-md-offset-1">
                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, new { @class = "control-label" })<span class="requiredSymbol">*</span>
                        @Html.TextBoxFor(model => model.LastName, new { @class = "form-control", maxlength = "70", placeholder = "Last Name" })
                        @Html.ValidationMessageFor(model => model.LastName)
                    </div>
                </div>
            </div>
            <div class="row">

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, new { @class = "control-label" })<span class="requiredSymbol">*</span>
                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control email", placeholder = "Email" })
                        @Html.ValidationMessageFor(model => model.Email)
                    </div>
                </div>
                <div class="col-md-2 col-md-offset-1">
                    <div class="form-group">
                        @Html.LabelFor(model => model.RoleName, new { @class = "control-label" })
                        <span class="requiredSymbol">*</span>
                       
                        @Html.DropDownListFor(model => model.RoleID, ViewBag.Roles as IEnumerable<SelectListItem>, new { @class = "form-control" ,id ="Roleselect"})

                        @Html.ValidationMessageFor(model => model.RoleName)
                    </div>


                </div>
                <div class="col-md-3 col-md-offset-1">
                    <div class="form-group">
                        @Html.LabelFor(model => model.SPFS_Active, new { @class = "control-label" })
                        <div class="input-group">
                            <div class="input-group-addon">
                                @Html.CheckBoxFor(model => model.SPFS_Active, new { @class = "saccCheckbox", id = "IsActive" })
                            </div>
                            @Html.Label(text, new { @class = "label label-success", id = "ActiveText" })
                        </div>
                        @Html.ValidationMessageFor(model => model.SPFS_Active)
                    </div>
                </div>
            </div>
        </div>
    </div>    <hr />
    <div class="row col-md-12">
        <div class="row pull-right">
            <a href="@Url.Action("Index")" class="btn btn-primary btn-sm">
                <span class="glyphicon glyphicon-circle-arrow-left"></span>Back to List
            </a>
            <button type="submit" class="btn btn-primary btn-sm" id="btnSave">
                <span class="glyphicon glyphicon-floppy-save"></span>
                <span>Save</span>
            </button>
        </div>
    </div>
}
<script type="text/javascript">

    $(document).ready(function () {
        $("input#IsActive").change(function () {
            var text = $(this).is(':checked') ? "Active" : "InActive"
            $("#ActiveText").html(text);
        });
        

        
    });

</script>

