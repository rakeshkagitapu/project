@model IEnumerable<SPFS.Models.SupplierListViewModel>

<div class="container col-md-12">
    <table class="table table-condensed table-hover">
        <tr class="active">
            <th>
                <a href="#" data-sortby="@ViewData["NameSort"]" class="sortby">@Html.DisplayNameFor(model => model.First().Name)</a>
            </th>
            <th>
                <a href="#" data-sortby="@ViewData["CIDSort"]" class="sortby">@Html.DisplayNameFor(model => model.First().CID)</a>
            </th>
            <th>
                <a href="#" data-sortby="@ViewData["DUNSSort"]" class="sortby">@Html.DisplayNameFor(model => model.First().Duns)</a>
            </th>

            <th>
                <a href="#" data-sortby="@ViewData["CitySort"]" class="sortby">@Html.DisplayNameFor(model => model.First().City)</a>
            </th>
            <th>
                <a href="#" data-sortby="@ViewData["CountrySort"]" class="sortby">@Html.DisplayNameFor(model => model.First().Country)</a>
            </th>


            <th class="actalign">
                <a href="#" data-sortby="@ViewData["IsActiveSort"]" class="sortby">@Html.DisplayNameFor(model => model.First().SPFS_Active)</a>
            </th>



        </tr>
        @if (Model.Count() == 0)
        {
            <tr>
                <td colspan="6">
                    <div class="alert alert-warning" role="alert">

                        <strong>Warning!</strong> @SPFS.Helpers.Utilities.NO_RESULT
                    </div>
                </td>
            </tr>
        }
        else
        {
            foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.ActionLink(item.Name, "ShowDetails", new { cid = item.CID })

                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CID)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Duns)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.City)

                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Country)
                    </td>

                    <td style="text-align:center">
                        @Html.DisplayFor(modelItem => item.SPFS_Active)

                    </td>


                </tr>
            }
        }
    </table>
    <div id="myPager">
        @if (Model.Count() > 0)
        {
            @Html.PagedListPager(Model, page => Url.Action("SearchByPage", new { page, search = Request.QueryString["search"], sortby = @ViewData["ActiveSort"], activeId = Convert.ToInt32(ViewData["ActiveId"]) }))
        }
    </div>
</div>