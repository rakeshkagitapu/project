@model SPFS.Models.ExcelRatingsViewModel

@{
    ViewBag.Title = "Index";
}

@*@using (Html.BeginForm(new { enctype = "multipart/form-data" }))*@
@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <h2>Ratings Excel Upload Page</h2>
    <hr />
    <br />
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.isUpload)
    @Html.HiddenFor(m => m.IsAlert)
    @Html.HiddenFor(m => m.IsStagingRatings)
    @Html.HiddenFor(m => m.IsCurrentRatings)
    @Html.HiddenFor(m => m.IsPreviousRatings)
    @Html.HiddenFor(m => m.IsPreviousStagingRatings)

    <div class="row col-md-12" style="padding-top: 5px">

        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.SiteID, new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.DropDownListFor(model => model.SiteID, ViewBag.Sites as IEnumerable<SelectListItem>, "",
                       new { @class = "selectpicker col-md-12", data_live_search = "true", data_size = "10", required = "true" })
                    @Html.ValidationMessageFor(model => model.SiteID)
                </div>
            </div>

        </div>
        <div class="col-md-6">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Month, new { @class = "control-label col-md-3" })
                <div class="col-md-9">
                    @Html.DropDownListFor(model => model.Month, ViewBag.Months as IEnumerable<SelectListItem>, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Month)
                </div>
            </div>
            <div class="form-group form-group-tight col-md-6">
                @Html.LabelFor(model => model.Year, new { @class = "control-label col-md-3" })
                <div class="input-group">
                    @Html.DropDownListFor(model => model.Year, ViewBag.Years as IEnumerable<SelectListItem>, new { @class = "form-control" })
                  @if (!Model.ShowResult)
                  {
                      <span class="input-group-btn" title="Search" rel="tooltip">
                        <button type="submit" value="Search" name="action:Search" class="btn btn-warning" onclick="OnBeginPostBack_Search(this)">
                            <span class="glyphicon glyphicon-search" />
                        </button>
                    </span>
                  }
                </div>

            </div>

        </div>

    </div>

    if (Model.IsAlert)
    {

        <div class="panel panel-default panel-primary">
            <div class="panel-heading panel-primary">
                <h3 class="panel-title">Please select</h3>
            </div>
            <div class="panel-body" id="Alertpanel">
                @Html.Raw(ViewBag.alertmsg)
                <br />
                <div class="btn-group pull-right" style="padding-top:10px;">
                    @if (Model.IsStagingRatings)
                    {

                        <a href="@Url.Action("ClearStaging", "ExcelUpload", new { SiteID = Model.SiteID, Year = Model.Year, Month = Model.Month })" class="btn btn-success btn-md">Yes - Continue with Upload </a>
                        <a href="@Url.Action("LoadAlertData", "Ratings", new { SiteID = Model.SiteID, Year = Model.Year, Month = Model.Month, isStaging = true, isLastmonth = false })" class="btn btn-danger btn-md">No - Load Current Period data</a>
                    }
                    @if (Model.IsPreviousStagingRatings)
                    {

                        <a href="@Url.Action("LoadAlertData", "Ratings", new { SiteID = Model.SiteID, Year = Model.Year, Month = Model.Month, isStaging = true, isLastmonth = true })" class="btn btn-success btn-md">Yes - Load Previous Period data </a>
                        <a href="@Url.Action("Index", "ExcelUpload", new { SiteID = Model.SiteID})" class="btn btn-danger btn-md">No - Continue with Upload</a>
                    }
                    @if (Model.IsCurrentRatings)
                    {
                        <a href="@Url.Action("LoadAlertData", "Ratings", new { SiteID = Model.SiteID, Year = Model.Year, Month = Model.Month, isStaging = false, isLastmonth = false })" class="btn btn-success btn-smd">Yes - Overwrite existing data </a>
                        <a href="@Url.Action("LoadUploadIndex", "ExcelUpload", new { SiteID = Model.SiteID, Year = Model.Year, Month = Model.Month})" class="btn btn-danger btn-md">No - Continue with Upload</a>
                       
                    }

                </div>
            </div>
        </div>

    }
    else if (Model.ShowResult)
    {
        <div class="row col-md-12">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.UploadFile, new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        <input type="file" id="UploadFile" name="UploadFile" class="col-md-12 form-control" />
                        @Html.ValidationMessageFor(model => model.UploadFile)
                    </div>
                </div>
            </div>
            <div class="form-group form-group-marginless">
                <div class="col-md-6">

                   
                    <div class="col-md-10">
                        <button type="submit" value="Cancel" onclick="OnBeginPostBack_Upload(this)" name="action:Upload" class="btn btn-primary">
                            <span class="glyphicon glyphicon-upload search"></span>
                            <span>Upload</span>
                        </button>
                        <a href="@Url.Action("Index", "ExcelUpload", new { SiteID = Model.SiteID})" class="btn btn-danger">Cancel</a>
                    </div>
                </div>
            </div>
        </div>

    }
    else
    {
        if (Model.EditMode)
        {   
            <hr/>
            <h2>Select location and month and click on search to show ratings </h2>
        }
        else
        {
            <div class="alert alert-warning"><strong>Info!</strong> There are no records found for this Search Criteria.</div>
        }
    }

}

<script type="text/javascript">
    $(document).ready(function () {

        var siteId = $("#SiteID option:selected").val();

        $('#SiteID').change(function () {
            var siteId = $("#SiteID option:selected").val();
            if (siteId != "") {

                $(this).valid();

            }

        });
        if ('@Model.IsAlert' == 'True') {
            var bgColor = '#f2dede';
            var bgOriginal = $('#Alertpanel').css('background-color');
            var inTime = 1000;
            var outTime = 2000;


            $(':animated').promise().done(function () {
                $('#Alertpanel').animate({ backgroundColor: bgColor }, inTime, function () {
                    $('#Alertpanel').animate({ backgroundColor: bgOriginal }, outTime);
                });

            });
        }


    });

</script>